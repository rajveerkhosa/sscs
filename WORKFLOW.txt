================================================================================
SSCS WEEKLY TRACKER - WORKFLOW DIAGRAM
================================================================================

┌─────────────────────────────────────────────────────────────────────────────┐
│                            MANUAL RUN / SCHEDULED                            │
│                         python main.py (or cron/Task)                        │
└─────────────────────────────────────────────────────────────────────────────┘
                                       │
                                       ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                          1. INITIALIZATION                                   │
├─────────────────────────────────────────────────────────────────────────────┤
│  • Load config.yaml                                                          │
│  • Load .env credentials                                                     │
│  • Setup logging (logs/sscs_update_YYYY-MM-DD_HH-MM-SS.log)                 │
└─────────────────────────────────────────────────────────────────────────────┘
                                       │
                                       ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                      2. WEEK CALCULATION (week_utils.py)                     │
├─────────────────────────────────────────────────────────────────────────────┤
│  Today: 2025-10-19 (Sunday)                                                  │
│    ↓                                                                         │
│  Find last full Sunday: 2025-10-12                                           │
│    ↓                                                                         │
│  Calculate week range:                                                       │
│    Monday:    2025-10-06 00:00:00  →  20251006000000                        │
│    Sunday:    2025-10-12 23:59:59  →  20251012235959                        │
│    ↓                                                                         │
│  Generate label: "12th Oct"                                                  │
└─────────────────────────────────────────────────────────────────────────────┘
                                       │
                                       ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                    3. SSCS LOGIN (sscs_scraper.py)                           │
├─────────────────────────────────────────────────────────────────────────────┤
│  • Start Firefox (headless or visible)                                       │
│  • Navigate to login URL                                                     │
│  • Enter credentials from .env                                               │
│  • Click login → Wait for success                                            │
└─────────────────────────────────────────────────────────────────────────────┘
                                       │
                                       ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                4. DATA COLLECTION (fuel_aggregator.py)                       │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│  FOR EACH PREFIX: 050, 019, 001, 002, 003, 062                              │
│    │                                                                         │
│    ├─► Navigate to Transaction Line Items                                   │
│    │   URL: .../#!/transactionlineitems/?                                    │
│    │        startDate=20251006000000&                                        │
│    │        endDate=20251012235959&                                          │
│    │        selectedSites=006579001&                                         │
│    │        department=1&                                                    │
│    │        idstartswith=XXX&                                                │
│    │        autosubmit=true                                                  │
│    │                                                                         │
│    ├─► Wait for table to load (tbody tr present)                            │
│    │                                                                         │
│    ├─► Find "Qty" column index                                              │
│    │   • Read table thead tr:last-child th                                   │
│    │   • Match "Qty" (case-insensitive, normalized)                         │
│    │   • Save column index (e.g., index 5)                                   │
│    │                                                                         │
│    ├─► Extract footer Qty value                                             │
│    │   • Try tfoot tr first                                                  │
│    │   • Fallback: summary row with td.footer.alignRight                    │
│    │   • Read td[qtyColIndex].text                                          │
│    │   • Parse: "11,989.79" → 11989.79                                      │
│    │                                                                         │
│    └─► Store value for prefix                                               │
│                                                                              │
│  AGGREGATE:                                                                  │
│    diesel_gal  = prefix[050] + prefix[019]                                  │
│    regular_gal = prefix[001] + prefix[002] + prefix[003]                    │
│    def_gal     = prefix[062]                                                │
│    total_gal   = diesel_gal + regular_gal + def_gal                         │
│                                                                              │
│  SANITY CHECK:                                                               │
│    sum(all prefixes) == total_gal ? ✓ : ⚠ WARNING                           │
│                                                                              │
│  RESULT:                                                                     │
│    ┌──────────────────────────────┐                                         │
│    │ Diesel:    11,989.79 gal    │                                         │
│    │ Regular:    8,500.50 gal    │                                         │
│    │ DEF:        1,234.56 gal    │                                         │
│    │ ───────────────────────────  │                                         │
│    │ TOTAL:     21,724.85 gal    │                                         │
│    └──────────────────────────────┘                                         │
└─────────────────────────────────────────────────────────────────────────────┘
                                       │
                                       ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                         5. CLOSE BROWSER                                     │
├─────────────────────────────────────────────────────────────────────────────┤
│  • driver.quit()                                                             │
│  • (Scraping complete)                                                       │
└─────────────────────────────────────────────────────────────────────────────┘
                                       │
                                       ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                   6. EXCEL UPDATE (excel_updater.py)                         │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│  BACKUP:                                                                     │
│    • Copy: Weekly Tracker.xlsx                                              │
│           → backups/Weekly Tracker_2025-10-19.xlsx                          │
│                                                                              │
│  LOAD WORKBOOK:                                                              │
│    • openpyxl.load_workbook("Weekly Tracker.xlsx")                          │
│                                                                              │
│  FOR EACH SHEET: "Gallons v Last Year", "C Store Sales v Last Year"         │
│    │                                                                         │
│    ├─► Find "Total" row                                                     │
│    │   • Search column A for cell.value == "Total"                          │
│    │   • Example: Found at row 25                                           │
│    │                                                                         │
│    ├─► Check if week "12th Oct" already exists                              │
│    │   • Search column A above Total row                                    │
│    │   • If found → UPDATE that row                                         │
│    │   • If not found → INSERT new row                                      │
│    │                                                                         │
│    ├─► INSERT NEW ROW (if needed)                                           │
│    │   • ws.insert_rows(25, 1)  ← insert above Total                       │
│    │   • Total row moves to 26                                              │
│    │   •                                                                     │
│    │   • Copy formatting from row 24 (previous last data row):              │
│    │     - Fonts, borders, fills                                            │
│    │     - Number formats (e.g., #,##0.00)                                  │
│    │     - Alignment, protection                                            │
│    │   •                                                                     │
│    │   • Write week label to A25: "12th Oct"                                │
│    │                                                                         │
│    ├─► WRITE DATA to row 25                                                 │
│    │   • Column B: diesel_gal    (11989.79)                                 │
│    │   • Column E: regular_gal   ( 8500.50)                                 │
│    │   • Column H: def_gal       ( 1234.56)                                 │
│    │   • Column K: total_gal     (21724.85)                                 │
│    │   •                                                                     │
│    │   • (Columns C,D,F,G,I,J,L untouched - formulas for Last Year data)    │
│    │                                                                         │
│    └─► HIDE OLDEST ROW (rolling window)                                     │
│        • Find first data row (e.g., row 2)                                  │
│        • ws.row_dimensions[2].hidden = True                                 │
│        • (Row still exists for formulas, just hidden from view)             │
│                                                                              │
│  SAVE WORKBOOK:                                                              │
│    • wb.save("Weekly Tracker.xlsx")                                         │
│                                                                              │
│  VISUAL EXAMPLE:                                                             │
│    Before:                        After:                                     │
│    ┌─────────────────┐            ┌─────────────────┐                       │
│    │ Week Ending | B │            │ Week Ending | B │                       │
│    ├─────────────────┤            ├─────────────────┤                       │
│    │  5th Oct    |...│ ← oldest   │  5th Oct    |...│ ← HIDDEN             │
│    │ 12th Oct    |...│            │ 12th Oct    |...│                       │
│    │ 19th Oct    |...│            │ 19th Oct    |...│                       │
│    │ 26th Oct    |...│            │ 26th Oct    |...│                       │
│    │ Total       |...│            │  2nd Nov    |NEW│ ← NEW                 │
│    └─────────────────┘            │ Total       |...│ ← moved down          │
│                                   └─────────────────┘                       │
└─────────────────────────────────────────────────────────────────────────────┘
                                       │
                                       ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                            7. COMPLETION                                     │
├─────────────────────────────────────────────────────────────────────────────┤
│  LOG SUMMARY:                                                                │
│    ✓ Week: 12th Oct                                                         │
│    ✓ Diesel: 11,989.79 gal                                                  │
│    ✓ Regular: 8,500.50 gal                                                  │
│    ✓ DEF: 1,234.56 gal                                                      │
│    ✓ Total: 21,724.85 gal                                                   │
│    ✓ Excel updated                                                          │
│    ✓ Backup created                                                         │
│                                                                              │
│  FILES CREATED:                                                              │
│    • logs/sscs_update_2025-10-19_07-00-15.log                               │
│    • backups/Weekly Tracker_2025-10-19.xlsx                                 │
│                                                                              │
│  EXIT CODE: 0 (success)                                                      │
└─────────────────────────────────────────────────────────────────────────────┘


================================================================================
ERROR HANDLING
================================================================================

┌─────────────────────────────────────────────────────────────────────────────┐
│ IF ERROR OCCURS:                                                             │
├─────────────────────────────────────────────────────────────────────────────┤
│  • Log full stack trace to log file                                         │
│  • Close browser if open                                                    │
│  • Display error message to console                                         │
│  • Exit with code 1 (failure)                                               │
│  • Excel file UNCHANGED (backup not restored automatically)                 │
│  • User can restore from backups/ if needed                                 │
└─────────────────────────────────────────────────────────────────────────────┘


================================================================================
COLUMN MAPPING REFERENCE
================================================================================

Sheet: "Gallons v Last Year"
┌───────────────────────────────────────────────────────────────────────┐
│ A          B           C          D          E           F          G │
│ Week     Diesel    Last Year   % v LY    Regular   Last Year   % v LY│
│ Ending  (This wk)                       (This wk)                     │
├───────────────────────────────────────────────────────────────────────┤
│ 12th Oct  11989.79  [formula]  [formula]  8500.50  [formula]  [form.]│
│          ▲ WE WRITE             UNTOUCHED  ▲ WE WRITE      UNTOUCHED │
└───────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────┐
│ H          I          J          K          L          M              │
│ DEF     Last Year   % v LY    Total    Last Year   % v LY            │
│(This wk)                     (This wk)                                │
├───────────────────────────────────────────────────────────────────────┤
│ 1234.56  [formula]  [formula]  21724.85  [formula]  [formula]        │
│ ▲ WE WRITE         UNTOUCHED   ▲ WE WRITE         UNTOUCHED          │
└───────────────────────────────────────────────────────────────────────┘


================================================================================
PREFIX → FUEL TYPE MAPPING
================================================================================

SSCS Transaction Line Items, Department 1:

  ID Prefix    Fuel Type       Aggregation
  ─────────    ─────────       ───────────
     050   →   Diesel          ┐
     019   →   Diesel          ├─► diesel_gal
                               ┘
     001   →   Regular Gas     ┐
     002   →   Regular Gas     │
     003   →   Regular Gas     ├─► regular_gal
                               ┘
     062   →   DEF             ──► def_gal

  TOTAL = diesel_gal + regular_gal + def_gal


================================================================================
SSCS URL STRUCTURE
================================================================================

Base: https://sscsta.sscsinc.com/TransactionAnalysis.App

Transaction Line Items endpoint:
  #!/transactionlineitems/

Query Parameters:
  ?startDate=20251006000000          ← Mon 00:00:00
  &endDate=20251012235959            ← Sun 23:59:59
  &selectedSites=006579001           ← Your site code
  &department=1                      ← Fuel department
  &idstartswith=050                  ← ID prefix
  &autosubmit=true                   ← Auto-run query

Full example:
https://sscsta.sscsinc.com/TransactionAnalysis.App/#!/transactionlineitems/?startDate=20251006000000&endDate=20251012235959&selectedSites=006579001&department=1&idstartswith=050&autosubmit=true


================================================================================
TABLE SCRAPING LOGIC
================================================================================

HTML Structure:
  <table>
    <thead>
      <tr>                           ← May be multiple header rows
        <th>Date</th>
        <th>ID</th>
        <th>Description</th>
        <th>Qty</th>                 ← FIND THIS
        <th>Sale Amount</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>2025-10-06</td>
        <td>050001</td>
        <td>Diesel #1</td>
        <td>125.50</td>              ← Individual row
        <td>$450.25</td>
      </tr>
      ...many rows...
    </tbody>
    <tfoot>                          ← TRY THIS FIRST
      <tr>
        <td></td>
        <td></td>
        <td>Total:</td>
        <td>11989.79</td>            ← EXTRACT THIS (at Qty column index)
        <td>$43,150.00</td>
      </tr>
    </tfoot>
  </table>

  OR (if no tfoot):

  <table>
    <tbody>
      ...data rows...
      <tr>                           ← FALLBACK: summary row
        <td class="footer"></td>
        <td class="footer"></td>
        <td class="footer">Total:</td>
        <td class="footer alignRight">11,989.79</td>  ← EXTRACT THIS
        <td class="footer alignRight">$43,150.00</td>
      </tr>
    </tbody>
  </table>

Algorithm:
  1. Read thead tr:last-child th → normalize text → find "Qty" → save index
  2. Try tfoot tr
  3. If not found, search for row with td.footer cells
  4. Read td[qtyColIndex].text
  5. Strip commas, parse as float


================================================================================
END OF WORKFLOW
================================================================================
